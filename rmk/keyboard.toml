[keyboard]
name = "sessile"
product_name = "sessile"
vendor_id = 0x4c4b
product_id = 0x4643
manufacturer = "RMK"
board = "XIAO BLE"

[matrix]
# Input and output pins are mandatory
input_pins = ["P1_12", "P0_10", "P0_09", "P1_11"]
output_pins = ["P0_02", "P1_15", "P0_03", "P1_14", "P0_28", "P1_13", "P0_29"]
# WARNING: Currently row2col/col2row is set in RMK's feature gate, row2col config here is valid ONLY when you're using cloud compilation.
# Checkout doc here: https://rmk.rs/docs/user_guide/faq.html#my-matrix-is-row2col-the-matrix-doesn-t-work
# row2col = true

[layout]
rows = 7
cols = 4
layers = 4
matrix_map = """
(0,0) (0,1) (0,2) (0,3) (1,0) (1,1) (1,2) (1,3)
(2,0) (2,1) (2,2) (2,3) (3,0) (3,1) (3,2) (3,3)
(4,0) (4,1) (4,2) (4,3) (5,0) (5,1) (5,2) (5,3)
            (6,0) (6,1) (6,2) (6,3)
"""

[[layer]]
name = "caster"
keys = """
B F D L P O U Y
MT(C, LCtrl) MT(S, LAlt) MT(T, LGui) MT(R, LShift) MT(N, RShift) MT(A, RGui) MT(I, RAlt) MT(H, RCtrl)
V G M W Dot Comma Quote K
LT(2, Backspace) LT(1, Space) E Enter
"""

[[layer]]
name = "numbnav"
keys = """
KpEnter Kp7 Kp8 Kp9 KbVolumeDown KbMute KbVolumeUp __
Kp0 Kp4 Kp5 Kp6 Left Down UP Right
KpDot Kp1 Kp2 Kp3 Home PageDown PageUp End
__ __ __ __
"""

[[layer]]
name = "function"
keys = """
F12 F7 F8 F9 __ __ __ __
F11 F4 F5 F6 __ __ __ __
F10 F1 F2 F3 __ __ __ __
__ __ __ __
"""

[[layer]]
name = "upsidedown"
keys = """
Y U O P L D F B
MT(H, LCtrl) MT(I, LAlt) MT(A, LGui) MT(N, LShift) MT(R, RShift) MT(T, RGui) MT(S, RAlt) MT(C, RCtrl)
K Quote Comma Dot W M G V
LT(2, Enter) LT(1, E) Space Backspace
"""

[ble]
enabled = true

[storage]
clear_storage = true

# See https://rmk.rs/docs/features/configuration/behavior
[behavior]
# Enable HRM 
tap_hold = { enable_hrm = true, permissive_hold = true, chordal_hold = true, prior_idle_time = "455ms", hold_timeout = "200ms" }
# # Disable HRM, you can safely ignore any fields if you don't want to change them
# # tap_hold = { enable_hrm = false, hold_timeout = "200ms" }

[behavior.combo]
timeout = "25ms"
combos = [
    # Press J and K keys simultaneously to output Escape key
    { actions = ["D", "L", "F"], output = "Escape", layer = 0 },
    { actions = ["MT(R, LShift)", "MT(N, RShift)"], output = "CapsLock", layer = 0 },
    { actions = ["MT(S, LAlt)", "MT(T, LGui)", "MT(R, LShift)"], output = "OSL(3)", layer = 0 },
    { actions = ["B", "F"], output = "Grave", layer = 0 },
    { actions = ["MT(C, LCtrl)", "MT(S, LAlt)"], output = "Tab", layer = 0 },
    { actions = ["W", "M"], output = "Minus", layer = 0 },
    { actions = ["Dot", "Comma"], output = "Slash", layer = 0},
    { actions = ["MT(I, RAlt)", "MT(H, RCtrl)"], output = "Semicolon", layer = 0 },
    { actions = ["D", "L"], output = "Equal", layer = 0 },
    { actions = ["P", "O"], output = "Backslash", layer = 0 },
    { actions = ["O", "U"], output = "LeftBracket", layer = 0 },
    { actions = ["Comma", "Quote"], output = "RightBracket", layer = 0},
    { actions = ["V", "G"], output = "Q", layer = 0 },
    { actions = ["G", "M"], output = "J", layer = 0 },
    { actions = ["F", "D"], output = "X", layer = 0 },
    { actions = ["V", "W"], output = "Z", layer = 0 },
    { actions = ["U", "Y"], output = "K", layer = 0 },
    { actions = ["B", "MT(C, LCtrl)"], output = "Kc1", layer = 0 },
    { actions = ["F", "MT(S, LAlt)"], output = "Kc2", layer = 0 },
    { actions = ["D", "MT(T, LGui)"], output = "Kc3", layer = 0 },
    { actions = ["L", "MT(R, LShift)"], output = "Kc4", layer = 0 },
    { actions = ["LT(2, Backspace)", "LT(1, Space)"], output = "Kc5", layer = 0 },
    { actions = ["E", "Enter"], output = "Kc6", layer = 0 },
    { actions = ["P", "MT(N, RShift)"], output = "Kc7", layer = 0 },
    { actions = ["O", "MT(A, RGui)"], output = "Kc8", layer = 0 },
    { actions = ["U", "MT(I, RAlt)"], output = "Kc9", layer = 0 },
    { actions = ["Y", "MT(H, RCtrl)"], output = "Kc0", layer = 0 },
    { actions = ["V", "MT(C, LCtrl)"], output = "WM(Z, LGui)", layer = 0 },
    { actions = ["G", "MT(S, LAlt)"], output = "WM(X, LGui)", layer = 0 },
    { actions = ["M", "MT(T, LGui)"], output = "WM(C, LGui)", layer = 0 },
    { actions = ["W", "MT(R, LShift)"], output = "WM(V, LGui)", layer = 0 },
    { actions = ["Dot", "MT(N, RShift)"], output = "Left", layer = 0 },
    { actions = ["Comma", "MT(A, RGui)"], output = "Down", layer = 0 },
    { actions = ["Quote", "MT(I, RAlt)"], output = "UP", layer = 0 },
    { actions = ["K", "MT(H, RCtrl)"], output = "Right", layer = 0 }
]


[rmk]
# Maximum number of combos keyboard can store
combo_max_num = 64